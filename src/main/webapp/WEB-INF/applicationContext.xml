<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:webflow-config="http://www.springframework.org/schema/webflow-config"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/webflow-config
       http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">


    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- This produces a container-managed EntityManagerFactory;
      rather than application-managed EntityManagerFactory as in case of LocalEntityManagerFactoryBean-->
    <bean id="entityManagerFactoryBean" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- This makes /META-INF/persistence.xml is no longer necessary -->
        <property name="packagesToScan" value="com.emusicstore.model"/>
        <!-- JpaVendorAdapter implementation for Hibernate EntityManager.
             Exposes Hibernate's persistence provider and EntityManager extension interface -->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.dialect}</prop>
                <prop key="hibernate.dialect">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
            </props>
        </property>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactoryBean"/>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10240000"/>
    </bean>

    <security:http auto-config="true" access-denied-page="/Access_Denied">
        <security:intercept-url pattern="/admin/**" access="ROLE_ADMIN"/>
        <security:intercept-url pattern="/home/**" access="ROLE_ADMIN"/>
        <security:intercept-url pattern="/customer/**" access="ROLE_USER"/>
        <security:intercept-url pattern="/**" access="ROLE_GUEST"/>
        <security:form-login
                login-page="/login"
                default-target-url="/home"
                authentication-failure-url="/login?error"
                username-parameter="username"
                password-parameter="password"/>
        <security:logout logout-success-url="/login?logout" delete-cookies="JSESSIONID"/>
        <security:anonymous username="guest" granted-authority="ROLE_GUEST"/>
        <security:remember-me key="remember-me" services-ref="rememberMeServices"/>
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider user-service-ref="customUserDetailsService">
            <security:password-encoder ref="encoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="messages"></property>
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>


    <webflow-config:flow-executor id="flowExecutor" flow-registry="flowRegistry"/>

    <webflow-config:flow-registry id="flowRegistry" base-path="/WEB-INF/flows">
        <webflow-config:flow-location path="/checkout/checkout-flow.xml" id="checkout"/>
    </webflow-config:flow-registry>

    <bean id="flowHandlerMapping" class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
        <property name="flowRegistry" ref="flowRegistry"/>
    </bean>

    <bean id="flowHandlerAdapter" class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
        <property name="flowExecutor" ref="flowExecutor"/>
    </bean>

    <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg name="strength" value="11"/>
    </bean>


    <bean id="rememberMeServices"
          class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
        <constructor-arg value="remember-me"/>
        <constructor-arg ref="tokenRepositoryDao"/>
        <constructor-arg ref="customUserDetailsService"/>
        <property name="cookieName" value="remember-me"/>
        <property name="tokenLength" value="32"/>
        <property name="parameter" value="remember-me"/>
    </bean>


    <bean id="anonymousAuthFilter"
          class="org.springframework.security.web.authentication.AnonymousAuthenticationFilter">
        <property name="key" value="foobar"/>
        <property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS"/>
    </bean>

    <bean id="anonymousAuthenticationProvider"
          class="org.springframework.security.authentication.AnonymousAuthenticationProvider">
        <property name="key" value="foobar"/>
    </bean>


    <bean id="authenticationTrustResolver"
                class="org.springframework.security.authentication.AuthenticationTrustResolverImpl">
        <property name="anonymousClass" value="org.springframework.security.authentication.AnonymousAuthenticationToken"/>
    </bean>

    <task:scheduled-tasks scheduler="myScheduler">
        <task:scheduled ref="temporaryUserRemovalScheduler" method="reportCurrentTime" fixed-delay="60000" />
    </task:scheduled-tasks>

    <task:scheduler id="myScheduler" pool-size="1"/>
    <bean id="temporaryUserRemovalScheduler" class="com.emusicstore.scheduler.TemporaryUserRemovalScheduler"/>

</beans>